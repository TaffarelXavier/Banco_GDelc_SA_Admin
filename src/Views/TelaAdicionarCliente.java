/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controller.ClienteController;
import Controller.EmpresaController;
import Funcoes.Funcoes;
import Controller.ContaController;
import Controller.EnderecoController;
import Controller.FuncionarioController;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.io.FileOutputStream;
import java.io.IOException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Taffarel
 */
public class TelaAdicionarCliente extends javax.swing.JFrame {

    /**
     * Creates new form TelaAdicionarCliente
     */
    public TelaAdicionarCliente() {
        initComponents();
        getConfiguracoesSecundarias();
    }

    /**
     *
     */
    public void getConfiguracoesSecundarias() {

        // jLabel8.setText("Usuário Logado: " + FuncoesAdministrativas.getNomeDeUsuario());
        EnderecoController endereco = new EnderecoController();

        try {

            for (String values : ContaController.getValues()) {
                jComboBox1.addItem(values);
            }

        } catch (Exception ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            endereco.buscarCidades(Cidade);
        } catch (Exception e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nomeCompleto = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        agencia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        Cidade = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("CPF:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Senha:");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(153, 0, 153));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconesAdm/btn-salvar.png"))); // NOI18N
        jButton2.setText("SALVAR NOVO CLIENTE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Agência:");

        agencia.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Cidade:");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconesAdm/Actions-edit-clear-icon.png"))); // NOI18N
        jButton3.setText("LIMPAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Tipo da Conta:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione..." }));

        Cidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CidadeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Adicionar Novo Cliente");

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconesAdm/Button-Cancel-icon (1).png"))); // NOI18N
        jButton6.setText("CANCELAR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Nome Completo:");

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(nomeCompleto)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel9)
                                .addComponent(jLabel1)
                                .addComponent(jLabel6)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(3, 3, 3)
                                            .addComponent(jLabel4))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(agencia, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(Cidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jSeparator1))
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cidade, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agencia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Instancia a Classe ClienteController
        FuncionarioController func = new FuncionarioController();

        String[] dadosDaEmpresa = EmpresaController.getDadosEmpresa(1);

        String nomeDoBanco = EmpresaController.getNomeFantasia();
        
        try {

            String tipoDaConta = (String) jComboBox1.getSelectedItem();

            String cidade = (String) Cidade.getSelectedItem();

            String[] parts = cidade.split("-");

            String senha = jPasswordField1.getText();

            String nomCompleto = nomeCompleto.getText();

            //Verifica se todos os campos estão preenchidos.
            if (senha.trim().equals("") || nomCompleto.trim().equals("") || jComboBox1.getSelectedIndex() == 0 || jFormattedTextField1.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios.", "Atenção", JOptionPane.ERROR_MESSAGE);
                //Dá o focu no campo nomeCompleto
                nomeCompleto.requestFocus();
            } else {
                //Ver o documentário do método dividirString
                String[] n = Funcoes.dividirString(tipoDaConta, "-");

                //Chama a classe para gerar o PDF da biblioteca (iText-5.0.5.jar)
                Document document = new Document();

                //Cria uma instância JFileChooser
                JFileChooser chooser = new JFileChooser();

                chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

                FileFilter pdf = new FileNameExtensionFilter("Pdf Arquivo(.pdf)", "pdf");

                //Adiciona duas contas : CORRENTE E POUPANÇA 4 AQUI É O ID DO TIPO DA CONTA
                if (n[0].equals("4")) {

                    func.cadastrarCliente(senha, nomCompleto.toUpperCase(), Integer.parseInt(parts[3]), "1", jFormattedTextField1.getText(), 0, "ATIVO");
                    func.cadastrarCliente(senha, nomCompleto.toUpperCase(), Integer.parseInt(parts[3]), "2", jFormattedTextField1.getText(), 0, "ATIVO");

                    JOptionPane.showMessageDialog(null, "O novo cliente foi cadastrado!\nApós clicar em 'OK', "
                            + " aparecerá uma caixa de diálago,\nclique em salvar, em seguida, arguarde um instante,\n"
                            + "enquanto esse arquivo do cliente é gerado.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    try {

                        chooser.addChoosableFileFilter(pdf);

                        chooser.setAcceptAllFileFilterUsed(false);

                        chooser.setToolTipText("Somente arquivos PDF");

                        String fileName = "Nova-Conta-" + nomeCompleto.getText().replaceAll("\\s+", "-") + "-" + func.getUltimoRegistroCliente() + ".pdf";

                        chooser.setSelectedFile(new File(fileName));

                        int i = chooser.showSaveDialog(null);

                        File file = chooser.getSelectedFile();

                        if (i == 1) {
                            //JtextFieldLocal.setText("");
                        } else {
                            File arquivo = chooser.getSelectedFile();
                            PdfWriter.getInstance(document, new FileOutputStream(arquivo.getPath()));
                        }

                        document.open();

                        String tpConta = "Poupança";

                        if (tipoDaConta.equals("Corrente")) {
                            tpConta = "Corrente";
                        }

                        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                        Calendar cal = Calendar.getInstance();
                        String data = String.valueOf(dateFormat.format(cal.getTime()));
                        String linha = "--------------------------------------------------------------------------------------------------------------------------------";
                        // adicionando um parágrafo no documento
                        document.add(new Paragraph("Data e Hora da Criação: " + data));
                        document.add(new Paragraph(nomeDoBanco));
                        document.add(new Paragraph(linha));
                        document.add(new Paragraph(""));
                        document.add(new Paragraph("Dados Para Acesso do Cliente à sua conta no " + nomeDoBanco + "."));
                        document.add(new Paragraph("Obrigado por escolher o " + nomeDoBanco + "."));
                        document.add(new Paragraph(linha));
                        document.add(new Paragraph("Nome Completo:" + nomCompleto));
                        document.add(new Paragraph("Agência:" + agencia.getText()));
                        document.add(new Paragraph("Conta Corrente:" + func.getUltimoRegistroClientePorTipo("1")));
                        //Cliente.insertHash(PROPERTIES);
                        document.add(new Paragraph("Conta Poupança:" + func.getUltimoRegistroClientePorTipo("2")));
                        document.add(new Paragraph("Tipo da Conta: CORRENTE E POUPANÇA"));
                        String[] str2 = Funcoes.dividirString(cidade, "-");
                        document.add(new Paragraph("Cidade:" + str2[0] + "-" + str2[1]));
                        document.add(new Paragraph("Senha:" + senha));
                        document.add(new Paragraph(linha));
                        document.add(new Paragraph("Contato " + dadosDaEmpresa[15]));
                        document.add(new Paragraph("Emal: " + dadosDaEmpresa[6]));
                        document.add(new Paragraph("Telefone: " + dadosDaEmpresa[9]));
                        document.add(new Paragraph("Em breve um chat direto com nossos atendentes no seu aplicativo"));
                        document.add(new Paragraph(linha));
                        document.close();
                        //Abre o arquivo.
                        Funcoes.abrirArquivo(file.getPath());
                        jPasswordField1.setText("");
                        nomeCompleto.setText("");
                        jComboBox1.setSelectedIndex(0);

                    } catch (DocumentException | IOException de) {
                        System.err.println(de.getMessage());
                    }
                } else {
                    //Se conta for Corrente OU Poupança, mas não ambas.
                    if (func.cadastrarCliente(senha, nomCompleto.toUpperCase(), Integer.parseInt(parts[3]), n[0], jFormattedTextField1.getText(), 0, "ATIVO") > 0) {
                        JOptionPane.showMessageDialog(null, "Operação realizada com sucesso!\nApós clicar em 'OK',"
                                + "aparecerá uma caixa de diálago,\nclique em salvar, em seguida, arguarde um instante,\n"
                                + "enquanto esse arquivo é aberto.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                        //A partir daqui, começa a criar um PDF com os dados o ClienteController e salva onde o usário desejar

                        try {

                            chooser.addChoosableFileFilter(pdf);

                            chooser.setAcceptAllFileFilterUsed(false);

                            chooser.setToolTipText("Somente arquivos PDF");

                            String fileName = "Nova-Conta-" + nomeCompleto.getText().replaceAll("\\s+", "-") + "-" + func.getUltimoRegistroCliente() + ".pdf";

                            chooser.setSelectedFile(new File(fileName));

                            int i = chooser.showSaveDialog(null);

                            File file = chooser.getSelectedFile();

                            if (i == 1) {
                                //JtextFieldLocal.setText("");
                            } else {
                                File arquivo = chooser.getSelectedFile();
                                PdfWriter.getInstance(document, new FileOutputStream(arquivo.getPath()));
                            }

                            document.open();

                            String tpConta = "Poupança";
                            if (tipoDaConta.equals("Corrente")) {
                                tpConta = "Corrente";
                            }
                            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                            Calendar cal = Calendar.getInstance();
                            String data = String.valueOf(dateFormat.format(cal.getTime()));
                            String linha = "--------------------------------------------------------------------------------------------------------------------------------";
                            // adicionando um parágrafo no documento
                            document.add(new Paragraph(nomeDoBanco));
                            document.add(new Paragraph("A nova geração de serviços financeiros no Brasil"));
                            document.add(new Paragraph("Data e Hora da Criação: " + data));
                            document.add(new Paragraph(linha));
                            document.add(new Paragraph(""));
                            document.add(new Paragraph("Dados Para Acesso do Cliente a sua conta no " + nomeDoBanco + "."));
                            document.add(new Paragraph("Obrigado por escolher o " + dadosDaEmpresa[15]));
                            document.add(new Paragraph(linha));
                            document.add(new Paragraph("Nome Completo:" + nomCompleto));
                            document.add(new Paragraph("Agência:" + agencia.getText()));
                            document.add(new Paragraph("Conta Corrente:" + func.getUltimoRegistroClientePorTipo("1")));

                            //Insere os Hashs
                            int numeros[] = FuncionarioController.insertHash(Integer.parseInt(func.getUltimoRegistroClientePorTipo("1")));

                            int iIncr = 0;

                            String sql = "";

                            for (int x : numeros) {
                                ++iIncr;
                                if (i < 10) {
                                    sql += iIncr + ":" + String.valueOf(x) + ";";
                                } else {
                                    sql += iIncr + ":" + String.valueOf(x);
                                }
                            }

                            document.add(new Paragraph("Códigos de Segurança:" + sql));
                            document.add(new Paragraph("Conta Poupança:" + func.getUltimoRegistroClientePorTipo("2")));
                            document.add(new Paragraph("Tipo da Conta: CORRENTE E POUPANÇA"));
                            String[] str2 = Funcoes.dividirString(cidade, "-");
                            document.add(new Paragraph("Cidade:" + str2[0] + "-" + str2[1]));
                            document.add(new Paragraph("Senha:" + senha));
                            document.add(new Paragraph(linha));
                            document.add(new Paragraph("Contato " + dadosDaEmpresa[15]));
                            document.add(new Paragraph("Emal: " + dadosDaEmpresa[6]));
                            document.add(new Paragraph("Telefone: " + dadosDaEmpresa[9]));
                            document.add(new Paragraph("Em breve um chat direto com nossos atendentes no seu aplicativo"));
                            document.add(new Paragraph(linha));
                            document.close();
                            //Abre o arquivo.
                            Funcoes.abrirArquivo(file.getPath());
                            jPasswordField1.setText("");
                            nomeCompleto.setText("");
                            jComboBox1.setSelectedIndex(0);

                        } catch (DocumentException de) {
                            System.err.println(de.getMessage());
                        } catch (IOException ioe) {
                            System.err.println(ioe.getMessage());
                        }

                        Cidade.setSelectedIndex(0);
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jPasswordField1.setText("");
        nomeCompleto.setText("");
        jComboBox1.setSelectedIndex(0);
        Cidade.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CidadeActionPerformed
        // TODO add your handling code here:

        String cidade = (String) Cidade.getSelectedItem();
        String[] parts = cidade.split("-");
        agencia.setText(parts[2]);
    }//GEN-LAST:event_CidadeActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaAdicionarCliente().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cidade;
    private javax.swing.JTextField agencia;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField nomeCompleto;
    // End of variables declaration//GEN-END:variables
}
